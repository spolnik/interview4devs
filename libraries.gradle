ext {
    libs = libsMap(
            slf4j_api: 'org.slf4j:slf4j-api:1.7.12',
            logback: 'ch.qos.logback:logback-classic:1.1.3',
            guava: 'com.google.guava:guava:18.0',
            joda: 'joda-time:joda-time:2.8.1',
            commons_lang: 'commons-lang:commons-lang:2.6',
            spring : [
                boot : [
                    web: "org.springframework.boot:spring-boot-starter-web",
                    mongodb: "org.springframework.boot:spring-boot-starter-data-mongodb",
                    security: "org.springframework.boot:spring-boot-starter-security",
                    redis: "org.springframework.boot:spring-boot-starter-redis",
                    test: "org.springframework.boot:spring-boot-starter-test",
                    actuator: "org.springframework.boot:spring-boot-starter-actuator",
                    remote_shell: "org.springframework.boot:spring-boot-starter-remote-shell"
                ],
                cloud : [
                    spring_service_connector: 'org.springframework.cloud:spring-cloud-spring-service-connector',
                    cloudfoundry_connector: 'org.springframework.cloud:spring-cloud-cloudfoundry-connector',
                    security: 'org.springframework.cloud:spring-cloud-starter-security',
                    zuul: 'org.springframework.cloud:spring-cloud-starter-zuul'
                ],
                session: 'org.springframework.session:spring-session:1.0.1.RELEASE',
                security: 'org.springframework.security:spring-security-core:3.2.7.RELEASE',
                mongodb: 'org.springframework.data:spring-data-mongodb:1.7.0.RELEASE'
            ],
            test: [
                    junit: 'junit:junit:4.11',
                    assertj: 'org.assertj:assertj-core:1.7.1',
                    mockito: 'org.mockito:mockito-core:1.10.19'
            ]
    )
}

def libsMap(Map<String, ?> map) {
    def processMap
    processMap = { innerMap ->
        innerMap.each {
            if (it.value instanceof Map) {
                innerMap[it.key] = processMap(it.value)
            }
        }
        innerMap.asImmutable().withDefault {
            throw new Exception(
                    "No entry '$it' in dependency map (candidates: ${innerMap.keySet().sort().join(", ")})" )
        }
    }
    processMap(map)
}